@model GRA.Controllers.ViewModel.Profile.HouseholdAddViewModel

<div class="row">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1">
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="lead">Add Household Member</span>
            </div>
            <div class="panel-body">
                <form asp-controller="Profile" asp-action="AddHouseholdMember" method="post" role="form">
                    <div class="row" style="padding: 10px 0;">
                        <div class="col-xs-12">
                            <input asp-for="NewEnteredSchool" type="hidden" />

                            <div class="row row-spacing">
                                <div class="col-xs-12">
                                    <label asp-for="User.FirstName" class="control-label"></label>
                                    <input asp-for="User.FirstName" class="form-control" />
                                    <span asp-validation-for="User.FirstName" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="row row-spacing">
                                <div class="col-xs-12">
                                    <label asp-for="User.LastName" class="control-label"></label>
                                    <input asp-for="User.LastName" class="form-control" />
                                    <span asp-validation-for="User.LastName" class="text-danger"></span>
                                </div>
                            </div>

                            @if (Model.SystemList.Count() > 1)
                            {
                                <div class="row row-spacing">
                                    <div class="col-xs-12">
                                        <label asp-for="User.SystemId" class="control-label"></label>
                                        <select asp-for="User.SystemId" asp-items="Model.SystemList" class="form-control"></select>
                                        <span asp-validation-for="User.SystemId" class="text-danger"></span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input asp-for="User.SystemId" type="hidden" />
                            }

                            @if (Model.SystemList.Count() > 1 || Model.BranchList.Count() > 1)
                            {
                                <div class="row row-spacing">
                                    <div class="col-xs-12">
                                        <label asp-for="User.BranchId" class="control-label"></label>
                                        <select asp-for="User.BranchId" asp-items="Model.BranchList" class="form-control"></select>
                                        <span asp-validation-for="User.BranchId" class="text-danger"></span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input asp-for="User.BranchId" type="hidden" />
                            }

                            @if (Model.ProgramList.Count() > 1)
                            {
                                <div class="row row-spacing">
                                    <div class="col-xs-12">
                                        <label asp-for="User.ProgramId" class="control-label"></label>
                                        <select asp-for="User.ProgramId" asp-items="Model.ProgramList" class="form-control">
                                            <option value="-1"></option>
                                        </select>
                                        <span asp-validation-for="User.ProgramId" class="text-danger"></span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input asp-for="User.ProgramId" type="hidden" />
                            }

                            <div id="cardField" class="row row-spacing @(Model.ShowCard ? "": "hide")">
                                <div class="col-xs-12">
                                    <label asp-for="User.CardNumber" class="control-label"></label>
                                    <input asp-for="User.CardNumber" class="form-control" />
                                    <span asp-validation-for="User.CardNumber" class="text-danger"></span>
                                </div>
                            </div>

                            <div id="goalField" class="row row-spacing @(Model.ShowGoal ? "": "hide")">
                                <div class="col-xs-12">
                                    <label id="goalLabel" asp-for="User.Goal" class="control-label"></label>
                                    <input asp-for="User.Goal" class="form-control" />
                                    <span id="goalMessage" asp-validation-for="User.Goal" class="text-danger"></span>
                                </div>
                            </div>

                            <div id="ageField" class="row row-spacing @(Model.ShowAge ? "": "hide")">
                                <div class="col-xs-12">
                                    <label asp-for="User.Age" class="control-label"></label>
                                    <input asp-for="User.Age" class="form-control" type="text" />
                                    <span id="ageMessage" asp-validation-for="User.Age" class="text-danger"></span>
                                </div>
                            </div>

                            @if (Model.RequirePostalCode)
                            {
                                <div class="row row-spacing">
                                    <div class="col-xs-12">
                                        <label asp-for="User.PostalCode" class="control-label"></label>
                                        <input asp-for="User.PostalCode" class="form-control" />
                                        <span asp-validation-for="User.PostalCode" class="text-danger"></span>
                                    </div>
                                </div>
                            }

                            <div id="emailField" class="row row-spacing @(Model.ShowEmail ? "": "hide")">
                                <div class="col-xs-12">
                                    <label asp-for="User.Email" class="control-label"></label>
                                    <input asp-for="User.Email" class="form-control" type="email" />
                                    <span asp-validation-for="User.Email" class="text-danger"></span>
                                </div>
                            </div>

                            <div id="phoneField" class="row row-spacing @(Model.ShowPhoneNumber ? "": "hide")">
                                <div class="col-xs-12">
                                    <label asp-for="User.PhoneNumber" class="control-label"></label>
                                    <input asp-for="User.PhoneNumber" class="form-control" type="tel" />
                                    <span asp-validation-for="User.PhoneNumber" class="text-danger"></span>
                                </div>
                            </div>

                            <div id="schoolFields" class="@(Model.ShowSchool ? "": "hide")">
                                <div class="row">
                                    <div id="schoolDistrictGroup" class="col-xs-12 @(Model.NewEnteredSchool ? "" : "col-sm-6" ) row-spacing">
                                        <label class="control-label">School District</label>
                                        <select asp-for="SchoolDistrictId" asp-items="Model.SchoolDistrictList" class="form-control">
                                            <option></option>
                                        </select>
                                        <span asp-validation-for="SchoolDistrictId" class="text-danger"></span>
                                    </div>
                                    <div id="schoolTypeGroup" class="col-xs-12 col-sm-6 row-spacing @(Model.NewEnteredSchool ? "hide" : "" )">
                                        <label class="control-label">School Type</label>
                                        <select asp-for="SchoolTypeId" asp-items="Model.SchoolTypeList" class="form-control">
                                            <option></option>
                                        </select>
                                    </div>
                                </div>

                                <div id="schoolGroup" class="row row-spacing @(Model.NewEnteredSchool ? "hide" : "" )">
                                    <div class="col-xs-12">
                                        <label asp-for="User.SchoolId" class="control-label"></label>
                                        <label style="font-size: 12px;">
                                            <a id="schoolNotListed" style="text-decoration:none;cursor:pointer">My school isn't listed</a>
                                        </label>
                                        <select asp-for="User.SchoolId" asp-items="Model.SchoolList" class="form-control">
                                            <option></option>
                                        </select>
                                        <span asp-validation-for="User.SchoolId" class="text-danger"></span>
                                    </div>
                                </div>
                                <div id="enteredSchoolGroup" class="row row-spacing @(Model.NewEnteredSchool ? "" : "hide" )">
                                    <div class="col-xs-12">
                                        <label asp-for="User.EnteredSchoolName" class="control-label"></label>
                                        <label style="font-size: 12px;">
                                            <a id="viewSchoolList" style="text-decoration:none;cursor:pointer">View school list</a>
                                        </label>
                                        <input asp-for="User.EnteredSchoolName" class="form-control" />
                                        <span asp-validation-for="User.EnteredSchoolName" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <a asp-action="Household" class="btn btn-default">Return to Household</a>
                        <button type="submit" id="Submit" name="Submit" value="Submit" class="btn btn-primary btn-spinner">
                            <span class="buttonText">Add Member</span>
                            <span class="fa fa-spinner fa-pulse fa-lg fa-fw hidden"></span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var programs = JSON.parse('@Html.Raw(Model.ProgramJson)');
        var selectedProgram = $.grep(programs, function(obj) {
            return obj.Id == $("#User_ProgramId").val();
        })[0];

        $(document).ready(function() {
            validateGoal();
            validateAge();
        });

        $("#User_SystemId").on("change", function() {
            var systemId = $(this).val();
            var branchList = $("#User_BranchId");
            var branchId = branchList.val();
            var url = "@Url.Action("GetBranches", "Lookup", new { Area = string.Empty })";

            $.getJSON(url, { systemId: systemId, branchId: branchId }, function(response) {
                branchList.empty();
                if (response.length > 1)
                {
                    branchList.append(new Option("", "-1"));
                }
                $.each(response, function(index, item) {
                    branchList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        });

        $("#User_Goal").on("change", function() {
            validateGoal();
        });

        function validateGoal() {
            var goal = $("#User_Goal").val();
            var message = $("#goalMessage");

            if (goal != "" && ((selectedProgram.GoalMaximum != null && goal > selectedProgram.GoalMaximum)
                || (selectedProgram.GoalMinimum != null && goal < selectedProgram.GoalMinimum)))
            {
                 message.removeClass('field-validation-valid');
                 message.text("Your goal must be between " + selectedProgram.GoalMinimum + " and " + selectedProgram.GoalMaximum);
            }
            else
            {
                message.text("");
            }
        }

        $("#User_ProgramId").on("change", function() {
            var programId = $(this).val();
            selectedProgram = $.grep(programs, function(obj) {
                return obj.Id == programId;
            })[0];
            if (selectedProgram != null)
            {
                if (selectedProgram.AskAge)
                {
                    $("#ageField").removeClass("hide");
                    validateAge();
                }
                else
                {
                    $("#ageField").addClass("hide");
                }

                if (selectedProgram.AskSchool)
                {
                    $("#schoolFields").removeClass("hide");
                }
                else
                {
                    $("#schoolFields").addClass("hide");
                }

                if (selectedProgram.AskCard)
                {
                    $("#cardField").removeClass("hide");
                }
                else
                {
                    $("#cardField").addClass("hide");
                }

                if (selectedProgram.AskEmail)
                {
                    $("#emailField").removeClass("hide");
                }
                else
                {
                    $("#emailField").addClass("hide");
                }

                if (selectedProgram.AskPhoneNumber)
                {
                    $("#phoneField").removeClass("hide");
                }
                else
                {
                    $("#phoneField").addClass("hide");
                }

                if (selectedProgram.AskGoal)
                {
                    $("#goalField").removeClass("hide");
                }
                else
                {
                    $("#goalField").addClass("hide");
                }

                if (selectedProgram.GoalDescription)
                {
                    $("#goalLabel").text(selectedProgram.GoalDescription)
                }
                else
                {
                    $("#goalLabel").text("Goal")
                }
            }
        });

        $("#User_Age").on("change", function() {
            validateAge();
        });

        function validateAge() {
            var age = $("#User_Age").val();
            var message = $("#ageMessage");
            if (age != "" && ((age > selectedProgram.AgeMaximum && selectedProgram.AgeMaximum != null)
                || (age < selectedProgram.AgeMinimum && selectedProgram.AgeMinimum != null)))
            {
                var program = $.grep(programs, function(obj) {
                    return ((obj.AgeMaximum >= age || obj.AgeMaximum == null)
                            && (obj.AgeMinimum <= age || obj.AgeMinimum == null));
                })[0];
                if (program != null)
                {
                    message.removeClass('field-validation-valid field-validation-error text-danger');
                    message.addClass('text-primary');
                    $("#User_Age").removeClass("input-validation-error")
                    message.text("The program " + program.Name + " may be better suited for your age.")
                }
            }
            else
            {
                message.text("");
            }
        }

        $("#SchoolDistrictId").on("change", function() {
            var districtId = $(this).val();
            var typeList = $("#SchoolTypeId");
            var typeId = typeList.val();
            var getTypesUrl = "@Url.Action("GetSchoolTypes", "Lookup", new { Area = string.Empty })";

            if (districtId > 0)
            {
                $.getJSON(getTypesUrl, { districtId: districtId, typeId: typeId }, function(response) {
                    typeList.empty();
                    if (response.length > 1)
                    {
                        typeList.append(new Option("", ""));
                    }
                    $.each(response, function(index, item) {
                        typeList.append(new Option(item.text, item.value, item.selected, item.selected))
                    });
                    UpdateSchoolList(districtId, typeList.val());
                });
            }
            else
            {
                typeList.empty();
                typeList.append(new Option("", ""));
                UpdateSchoolList(districtId, typeList.val());
            }
        });

        $("#SchoolTypeId").on("change", function() {
            var typeId = $(this).val();
            var districtId = $("#SchoolDistrictId").val();
            UpdateSchoolList(districtId, typeId);
        });

        $("#schoolNotListed").on("click", function() {
            $("#schoolDistrictGroup").removeClass("col-sm-6");
            $("#schoolTypeGroup").addClass("hide");
            $("#schoolGroup").addClass("hide");
            $("#enteredSchoolGroup").removeClass("hide");
            $("#NewEnteredSchool").val("true");
        });

        $("#viewSchoolList").on("click", function() {
            $("#schoolDistrictGroup").addClass("col-sm-6");
            $("#schoolTypeGroup").removeClass("hide");
            $("#schoolGroup").removeClass("hide");
            $("#enteredSchoolGroup").addClass("hide");
            $("#NewEnteredSchool").val("false");
        });

        function UpdateSchoolList(districtId, typeId) {
            var schoolList = $("#User_SchoolId");
            if (districtId > 0)
            {
                var schoolId = schoolList.val();
                var getSchoolsUrl = "@Url.Action("GetSchools", "Lookup", new { Area = string.Empty })";

                $.getJSON(getSchoolsUrl, { districtId: districtId, typeId: typeId, schoolId: schoolId }, function(response) {
                    schoolList.empty();
                    schoolList.append(new Option("", ""));
                    $.each(response, function(index, item) {
                        schoolList.append(new Option(item.text, item.value, item.selected, item.selected))
                    });
                });
            }
            else
            {
                schoolList.empty();
                schoolList.append(new Option("", ""));
            }
        }
    </script>
}
